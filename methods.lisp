;; -*- mode: lisp; syntax: common-lisp; -*-
;;; Generated by build-methods in base.lisp (so don't edit)
(in-package "ETSY")



(defun get-user-details (user-id &key detail-level)
  "Get the details of a user."
  (etsy::parameter-type-check user-id-or-name user-id)
  (let ((etsy::cgi-args (list (cons "api_key" etsy::*api-key*))))
    (when detail-level
      (etsy::parameter-type-check detail-level detail-level)
      (push
       (cons "detail_level" (etsy::marshall-type detail-level detail-level))
       etsy::cgi-args))
    (etsy::demarshall-results
     (etsy::api-call
      (concatenate 'string etsy::*base-url* "/users/"
                   (etsy::marshall-type user-id-or-name user-id))
      etsy::cgi-args)
     "user" 'demarshall-user)))



(defun get-favorers-of-shop (user-id &key detail-level limit offset)
  "Get all the users who call this shop a favorite."
  (etsy::parameter-type-check user-id-or-name user-id)
  (let ((etsy::cgi-args (list (cons "api_key" etsy::*api-key*))))
    (when detail-level
      (etsy::parameter-type-check detail-level detail-level)
      (push
       (cons "detail_level" (etsy::marshall-type detail-level detail-level))
       etsy::cgi-args))
    (when limit
      (etsy::parameter-type-check int limit)
      (push (cons "limit" (etsy::marshall-type int limit)) etsy::cgi-args))
    (when offset
      (etsy::parameter-type-check int offset)
      (push (cons "offset" (etsy::marshall-type int offset)) etsy::cgi-args))
    (etsy::demarshall-results
     (etsy::api-call
      (concatenate 'string etsy::*base-url* "/shops/"
                   (etsy::marshall-type user-id-or-name user-id) "/favorers")
      etsy::cgi-args)
     "user" 'demarshall-user)))



(defun get-favorers-of-listing (listing-id &key detail-level limit offset)
  "Get all the users who call this listing a favorite."
  (etsy::parameter-type-check int listing-id)
  (let ((etsy::cgi-args (list (cons "api_key" etsy::*api-key*))))
    (when detail-level
      (etsy::parameter-type-check detail-level detail-level)
      (push
       (cons "detail_level" (etsy::marshall-type detail-level detail-level))
       etsy::cgi-args))
    (when limit
      (etsy::parameter-type-check int limit)
      (push (cons "limit" (etsy::marshall-type int limit)) etsy::cgi-args))
    (when offset
      (etsy::parameter-type-check int offset)
      (push (cons "offset" (etsy::marshall-type int offset)) etsy::cgi-args))
    (etsy::demarshall-results
     (etsy::api-call
      (concatenate 'string etsy::*base-url* "/listings/"
                   (etsy::marshall-type int listing-id) "/favorers")
      etsy::cgi-args)
     "user" 'demarshall-user)))



(defun get-users-by-name (search-name &key detail-level limit offset)
  "Search active users alphabetically by user_name."
  (etsy::parameter-type-check string search-name)
  (let ((etsy::cgi-args (list (cons "api_key" etsy::*api-key*))))
    (when detail-level
      (etsy::parameter-type-check detail-level detail-level)
      (push
       (cons "detail_level" (etsy::marshall-type detail-level detail-level))
       etsy::cgi-args))
    (when limit
      (etsy::parameter-type-check int limit)
      (push (cons "limit" (etsy::marshall-type int limit)) etsy::cgi-args))
    (when offset
      (etsy::parameter-type-check int offset)
      (push (cons "offset" (etsy::marshall-type int offset)) etsy::cgi-args))
    (etsy::demarshall-results
     (etsy::api-call
      (concatenate 'string etsy::*base-url* "/users/keywords/"
                   (etsy::marshall-type string search-name))
      etsy::cgi-args)
     "user" 'demarshall-user)))



(defun get-shop-details (user-id &key detail-level)
  "Get the details of a seller's shop."
  (etsy::parameter-type-check user-id-or-name user-id)
  (let ((etsy::cgi-args (list (cons "api_key" etsy::*api-key*))))
    (when detail-level
      (etsy::parameter-type-check detail-level detail-level)
      (push
       (cons "detail_level" (etsy::marshall-type detail-level detail-level))
       etsy::cgi-args))
    (etsy::demarshall-results
     (etsy::api-call
      (concatenate 'string etsy::*base-url* "/shops/"
                   (etsy::marshall-type user-id-or-name user-id))
      etsy::cgi-args)
     "shop" 'demarshall-shop)))



(defun get-featured-sellers (&key offset limit detail-level)
  "Get a list of all the featured sellers."
  (let ((etsy::cgi-args (list (cons "api_key" etsy::*api-key*))))
    (when offset
      (etsy::parameter-type-check int offset)
      (push (cons "offset" (etsy::marshall-type int offset)) etsy::cgi-args))
    (when limit
      (etsy::parameter-type-check int limit)
      (push (cons "limit" (etsy::marshall-type int limit)) etsy::cgi-args))
    (when detail-level
      (etsy::parameter-type-check detail-level detail-level)
      (push
       (cons "detail_level" (etsy::marshall-type detail-level detail-level))
       etsy::cgi-args))
    (etsy::demarshall-results
     (etsy::api-call (concatenate 'string etsy::*base-url* "/shops/featured")
                     etsy::cgi-args)
     "shop" 'demarshall-shop)))



(defun get-shops-by-name
       (search-name &key detail-level limit offset sort-order)
  "Search all active shops sorted alphabetically by user_name."
  (etsy::parameter-type-check string search-name)
  (let ((etsy::cgi-args (list (cons "api_key" etsy::*api-key*))))
    (when detail-level
      (etsy::parameter-type-check detail-level detail-level)
      (push
       (cons "detail_level" (etsy::marshall-type detail-level detail-level))
       etsy::cgi-args))
    (when limit
      (etsy::parameter-type-check int limit)
      (push (cons "limit" (etsy::marshall-type int limit)) etsy::cgi-args))
    (when offset
      (etsy::parameter-type-check int offset)
      (push (cons "offset" (etsy::marshall-type int offset)) etsy::cgi-args))
    (when sort-order
      (etsy::parameter-type-check sort-order sort-order)
      (push (cons "sort_order" (etsy::marshall-type sort-order sort-order))
            etsy::cgi-args))
    (etsy::demarshall-results
     (etsy::api-call
      (concatenate 'string etsy::*base-url* "/shops/keywords/"
                   (etsy::marshall-type string search-name))
      etsy::cgi-args)
     "shop" 'demarshall-shop)))



(defun get-favorite-shops-of-user (user-id &key detail-level limit offset)
  "Get the favorite shops of a user."
  (etsy::parameter-type-check user-id-or-name user-id)
  (let ((etsy::cgi-args (list (cons "api_key" etsy::*api-key*))))
    (when detail-level
      (etsy::parameter-type-check detail-level detail-level)
      (push
       (cons "detail_level" (etsy::marshall-type detail-level detail-level))
       etsy::cgi-args))
    (when limit
      (etsy::parameter-type-check int limit)
      (push (cons "limit" (etsy::marshall-type int limit)) etsy::cgi-args))
    (when offset
      (etsy::parameter-type-check int offset)
      (push (cons "offset" (etsy::marshall-type int offset)) etsy::cgi-args))
    (etsy::demarshall-results
     (etsy::api-call
      (concatenate 'string etsy::*base-url* "/users/"
                   (etsy::marshall-type user-id-or-name user-id)
                   "/favorites/shops")
      etsy::cgi-args)
     "shop" 'demarshall-shop)))



(defun get-listing-details (listing-id &key detail-level)
  "Get the details of a listing."
  (etsy::parameter-type-check int listing-id)
  (let ((etsy::cgi-args (list (cons "api_key" etsy::*api-key*))))
    (when detail-level
      (etsy::parameter-type-check detail-level detail-level)
      (push
       (cons "detail_level" (etsy::marshall-type detail-level detail-level))
       etsy::cgi-args))
    (etsy::demarshall-results
     (etsy::api-call
      (concatenate 'string etsy::*base-url* "/listings/"
                   (etsy::marshall-type int listing-id))
      etsy::cgi-args)
     "listing" 'demarshall-listing)))



(defun get-all-listings (&key sort-on sort-order offset limit detail-level)
  "Get all active listings on Etsy."
  (let ((etsy::cgi-args (list (cons "api_key" etsy::*api-key*))))
    (when sort-on
      (etsy::parameter-type-check sort-on-a sort-on)
      (push (cons "sort_on" (etsy::marshall-type sort-on-a sort-on))
            etsy::cgi-args))
    (when sort-order
      (etsy::parameter-type-check sort-order sort-order)
      (push (cons "sort_order" (etsy::marshall-type sort-order sort-order))
            etsy::cgi-args))
    (when offset
      (etsy::parameter-type-check int offset)
      (push (cons "offset" (etsy::marshall-type int offset)) etsy::cgi-args))
    (when limit
      (etsy::parameter-type-check int limit)
      (push (cons "limit" (etsy::marshall-type int limit)) etsy::cgi-args))
    (when detail-level
      (etsy::parameter-type-check detail-level detail-level)
      (push
       (cons "detail_level" (etsy::marshall-type detail-level detail-level))
       etsy::cgi-args))
    (etsy::demarshall-results
     (etsy::api-call (concatenate 'string etsy::*base-url* "/listings/all")
                     etsy::cgi-args)
     "listing" 'demarshall-listing)))



(defun get-shop-listings
       (user-id &key detail-level limit offset section-id sort-order sort-on)
  "Get all the listings in a shop."
  (etsy::parameter-type-check user-id-or-name user-id)
  (let ((etsy::cgi-args (list (cons "api_key" etsy::*api-key*))))
    (when detail-level
      (etsy::parameter-type-check detail-level detail-level)
      (push
       (cons "detail_level" (etsy::marshall-type detail-level detail-level))
       etsy::cgi-args))
    (when limit
      (etsy::parameter-type-check int limit)
      (push (cons "limit" (etsy::marshall-type int limit)) etsy::cgi-args))
    (when offset
      (etsy::parameter-type-check int offset)
      (push (cons "offset" (etsy::marshall-type int offset)) etsy::cgi-args))
    (when section-id
      (etsy::parameter-type-check int section-id)
      (push (cons "section_id" (etsy::marshall-type int section-id))
            etsy::cgi-args))
    (when sort-order
      (etsy::parameter-type-check sort-order sort-order)
      (push (cons "sort_order" (etsy::marshall-type sort-order sort-order))
            etsy::cgi-args))
    (when sort-on
      (etsy::parameter-type-check sort-on-b sort-on)
      (push (cons "sort_on" (etsy::marshall-type sort-on-b sort-on))
            etsy::cgi-args))
    (etsy::demarshall-results
     (etsy::api-call
      (concatenate 'string etsy::*base-url* "/shops/"
                   (etsy::marshall-type user-id-or-name user-id) "/listings")
      etsy::cgi-args)
     "listing" 'demarshall-listing)))



(defun get-featured-details (user-id &key detail-level)
  "Get the expanded details on featured listings of a shop, ordered by highest ranked featured item."
  (etsy::parameter-type-check user-id-or-name user-id)
  (let ((etsy::cgi-args (list (cons "api_key" etsy::*api-key*))))
    (when detail-level
      (etsy::parameter-type-check detail-level detail-level)
      (push
       (cons "detail_level" (etsy::marshall-type detail-level detail-level))
       etsy::cgi-args))
    (etsy::demarshall-results
     (etsy::api-call
      (concatenate 'string etsy::*base-url* "/shops/"
                   (etsy::marshall-type user-id-or-name user-id)
                   "/listings/featured")
      etsy::cgi-args)
     "listing" 'demarshall-listing)))



(defun get-front-featured-listings (&key offset limit detail-level)
  "Get the featured listings on the front page for the current day."
  (let ((etsy::cgi-args (list (cons "api_key" etsy::*api-key*))))
    (when offset
      (etsy::parameter-type-check int offset)
      (push (cons "offset" (etsy::marshall-type int offset)) etsy::cgi-args))
    (when limit
      (etsy::parameter-type-check int limit)
      (push (cons "limit" (etsy::marshall-type int limit)) etsy::cgi-args))
    (when detail-level
      (etsy::parameter-type-check detail-level detail-level)
      (push
       (cons "detail_level" (etsy::marshall-type detail-level detail-level))
       etsy::cgi-args))
    (etsy::demarshall-results
     (etsy::api-call
      (concatenate 'string etsy::*base-url* "/listings/featured/front")
      etsy::cgi-args)
     "listing" 'demarshall-listing)))



(defun get-favorite-listings-of-user (user-id &key detail-level limit offset)
  "Get the favorite listings of a user."
  (etsy::parameter-type-check user-id-or-name user-id)
  (let ((etsy::cgi-args (list (cons "api_key" etsy::*api-key*))))
    (when detail-level
      (etsy::parameter-type-check detail-level detail-level)
      (push
       (cons "detail_level" (etsy::marshall-type detail-level detail-level))
       etsy::cgi-args))
    (when limit
      (etsy::parameter-type-check int limit)
      (push (cons "limit" (etsy::marshall-type int limit)) etsy::cgi-args))
    (when offset
      (etsy::parameter-type-check int offset)
      (push (cons "offset" (etsy::marshall-type int offset)) etsy::cgi-args))
    (etsy::demarshall-results
     (etsy::api-call
      (concatenate 'string etsy::*base-url* "/users/"
                   (etsy::marshall-type user-id-or-name user-id)
                   "/favorites/listings")
      etsy::cgi-args)
     "listing" 'demarshall-listing)))



(defun get-gift-guide-listings (guide-id &key detail-level limit offset)
  "Get the listings in a gift guide."
  (etsy::parameter-type-check int guide-id)
  (let ((etsy::cgi-args (list (cons "api_key" etsy::*api-key*))))
    (when detail-level
      (etsy::parameter-type-check detail-level detail-level)
      (push
       (cons "detail_level" (etsy::marshall-type detail-level detail-level))
       etsy::cgi-args))
    (when limit
      (etsy::parameter-type-check int limit)
      (push (cons "limit" (etsy::marshall-type int limit)) etsy::cgi-args))
    (when offset
      (etsy::parameter-type-check int offset)
      (push (cons "offset" (etsy::marshall-type int offset)) etsy::cgi-args))
    (etsy::demarshall-results
     (etsy::api-call
      (concatenate 'string etsy::*base-url* "/gift-guides/"
                   (etsy::marshall-type int guide-id) "/listings")
      etsy::cgi-args)
     "listing" 'demarshall-listing)))



(defun get-listings-by-keyword
       (search-terms
        &key detail-level offset limit search-description max-price min-price
        sort-order sort-on)
  "Search for listings by keyword."
  (etsy::parameter-type-check array-of-strings search-terms)
  (let ((etsy::cgi-args (list (cons "api_key" etsy::*api-key*))))
    (when detail-level
      (etsy::parameter-type-check detail-level detail-level)
      (push
       (cons "detail_level" (etsy::marshall-type detail-level detail-level))
       etsy::cgi-args))
    (when offset
      (etsy::parameter-type-check int offset)
      (push (cons "offset" (etsy::marshall-type int offset)) etsy::cgi-args))
    (when limit
      (etsy::parameter-type-check int limit)
      (push (cons "limit" (etsy::marshall-type int limit)) etsy::cgi-args))
    (when search-description
      (etsy::parameter-type-check boolean search-description)
      (push
       (cons "search_description"
             (etsy::marshall-type boolean search-description))
       etsy::cgi-args))
    (when max-price
      (etsy::parameter-type-check float max-price)
      (push (cons "max_price" (etsy::marshall-type float max-price))
            etsy::cgi-args))
    (when min-price
      (etsy::parameter-type-check float min-price)
      (push (cons "min_price" (etsy::marshall-type float min-price))
            etsy::cgi-args))
    (when sort-order
      (etsy::parameter-type-check sort-order sort-order)
      (push (cons "sort_order" (etsy::marshall-type sort-order sort-order))
            etsy::cgi-args))
    (when sort-on
      (etsy::parameter-type-check sort-on-b sort-on)
      (push (cons "sort_on" (etsy::marshall-type sort-on-b sort-on))
            etsy::cgi-args))
    (etsy::demarshall-results
     (etsy::api-call
      (concatenate 'string etsy::*base-url* "/listings/keywords/"
                   (etsy::marshall-type array-of-strings search-terms))
      etsy::cgi-args)
     "listing" 'demarshall-listing)))



(defun get-listings-by-tags
       (tags &key detail-level limit offset sort-order sort-on)
  "Search for listings by tags."
  (etsy::parameter-type-check array-of-strings tags)
  (let ((etsy::cgi-args (list (cons "api_key" etsy::*api-key*))))
    (when detail-level
      (etsy::parameter-type-check detail-level detail-level)
      (push
       (cons "detail_level" (etsy::marshall-type detail-level detail-level))
       etsy::cgi-args))
    (when limit
      (etsy::parameter-type-check int limit)
      (push (cons "limit" (etsy::marshall-type int limit)) etsy::cgi-args))
    (when offset
      (etsy::parameter-type-check int offset)
      (push (cons "offset" (etsy::marshall-type int offset)) etsy::cgi-args))
    (when sort-order
      (etsy::parameter-type-check sort-order sort-order)
      (push (cons "sort_order" (etsy::marshall-type sort-order sort-order))
            etsy::cgi-args))
    (when sort-on
      (etsy::parameter-type-check sort-on-b sort-on)
      (push (cons "sort_on" (etsy::marshall-type sort-on-b sort-on))
            etsy::cgi-args))
    (etsy::demarshall-results
     (etsy::api-call
      (concatenate 'string etsy::*base-url* "/listings/tags/"
                   (etsy::marshall-type array-of-strings tags))
      etsy::cgi-args)
     "listing" 'demarshall-listing)))



(defun get-listings-by-materials
       (materials &key detail-level limit offset sort-order sort-on)
  "Search for listings by materials used."
  (etsy::parameter-type-check array-of-strings materials)
  (let ((etsy::cgi-args (list (cons "api_key" etsy::*api-key*))))
    (when detail-level
      (etsy::parameter-type-check detail-level detail-level)
      (push
       (cons "detail_level" (etsy::marshall-type detail-level detail-level))
       etsy::cgi-args))
    (when limit
      (etsy::parameter-type-check int limit)
      (push (cons "limit" (etsy::marshall-type int limit)) etsy::cgi-args))
    (when offset
      (etsy::parameter-type-check int offset)
      (push (cons "offset" (etsy::marshall-type int offset)) etsy::cgi-args))
    (when sort-order
      (etsy::parameter-type-check sort-order sort-order)
      (push (cons "sort_order" (etsy::marshall-type sort-order sort-order))
            etsy::cgi-args))
    (when sort-on
      (etsy::parameter-type-check sort-on-b sort-on)
      (push (cons "sort_on" (etsy::marshall-type sort-on-b sort-on))
            etsy::cgi-args))
    (etsy::demarshall-results
     (etsy::api-call
      (concatenate 'string etsy::*base-url* "/listings/materials/"
                   (etsy::marshall-type array-of-strings materials))
      etsy::cgi-args)
     "listing" 'demarshall-listing)))



(defun get-listings-by-category
       (category &key detail-level limit offset sort-order sort-on)
  "Search for listings by category."
  (etsy::parameter-type-check string category)
  (let ((etsy::cgi-args (list (cons "api_key" etsy::*api-key*))))
    (when detail-level
      (etsy::parameter-type-check detail-level detail-level)
      (push
       (cons "detail_level" (etsy::marshall-type detail-level detail-level))
       etsy::cgi-args))
    (when limit
      (etsy::parameter-type-check int limit)
      (push (cons "limit" (etsy::marshall-type int limit)) etsy::cgi-args))
    (when offset
      (etsy::parameter-type-check int offset)
      (push (cons "offset" (etsy::marshall-type int offset)) etsy::cgi-args))
    (when sort-order
      (etsy::parameter-type-check sort-order sort-order)
      (push (cons "sort_order" (etsy::marshall-type sort-order sort-order))
            etsy::cgi-args))
    (when sort-on
      (etsy::parameter-type-check sort-on-b sort-on)
      (push (cons "sort_on" (etsy::marshall-type sort-on-b sort-on))
            etsy::cgi-args))
    (etsy::demarshall-results
     (etsy::api-call
      (concatenate 'string etsy::*base-url* "/listings/category/"
                   (etsy::marshall-type string category))
      etsy::cgi-args)
     "listing" 'demarshall-listing)))



(defun get-listings-by-color (color &key detail-level limit offset wiggle)
  "Search for listings by average color of primary image."
  (etsy::parameter-type-check color-triplet color)
  (let ((etsy::cgi-args (list (cons "api_key" etsy::*api-key*))))
    (when detail-level
      (etsy::parameter-type-check detail-level detail-level)
      (push
       (cons "detail_level" (etsy::marshall-type detail-level detail-level))
       etsy::cgi-args))
    (when limit
      (etsy::parameter-type-check int limit)
      (push (cons "limit" (etsy::marshall-type int limit)) etsy::cgi-args))
    (when offset
      (etsy::parameter-type-check int offset)
      (push (cons "offset" (etsy::marshall-type int offset)) etsy::cgi-args))
    (when wiggle
      (etsy::parameter-type-check int wiggle)
      (push (cons "wiggle" (etsy::marshall-type int wiggle)) etsy::cgi-args))
    (etsy::demarshall-results
     (etsy::api-call
      (concatenate 'string etsy::*base-url* "/listings/color/"
                   (etsy::marshall-type color-triplet color))
      etsy::cgi-args)
     "listing" 'demarshall-listing)))



(defun get-listings-by-color-and-keywords
       (search-terms color &key detail-level limit offset wiggle)
  "Search for listings by keywords and average color of primary image."
  (etsy::parameter-type-check array-of-strings search-terms)
  (etsy::parameter-type-check color-triplet color)
  (let ((etsy::cgi-args (list (cons "api_key" etsy::*api-key*))))
    (when detail-level
      (etsy::parameter-type-check detail-level detail-level)
      (push
       (cons "detail_level" (etsy::marshall-type detail-level detail-level))
       etsy::cgi-args))
    (when limit
      (etsy::parameter-type-check int limit)
      (push (cons "limit" (etsy::marshall-type int limit)) etsy::cgi-args))
    (when offset
      (etsy::parameter-type-check int offset)
      (push (cons "offset" (etsy::marshall-type int offset)) etsy::cgi-args))
    (when wiggle
      (etsy::parameter-type-check int wiggle)
      (push (cons "wiggle" (etsy::marshall-type int wiggle)) etsy::cgi-args))
    (etsy::demarshall-results
     (etsy::api-call
      (concatenate 'string etsy::*base-url* "/listings/color/"
                   (etsy::marshall-type color-triplet color) "/keywords/"
                   (etsy::marshall-type array-of-strings search-terms))
      etsy::cgi-args)
     "listing" 'demarshall-listing)))



(defun get-top-tags (&key)
  "Get the list of current top level tags."
  (let ((etsy::cgi-args (list (cons "api_key" etsy::*api-key*))))
    (etsy::demarshall-results
     (etsy::api-call (concatenate 'string etsy::*base-url* "/tags")
                     etsy::cgi-args)
     "tag" 'demarshall-tag)))



(defun get-child-tags (tag &key)
  "Get the child tags of a tag."
  (etsy::parameter-type-check string tag)
  (let ((etsy::cgi-args (list (cons "api_key" etsy::*api-key*))))
    (etsy::demarshall-results
     (etsy::api-call
      (concatenate 'string etsy::*base-url* "/tags/"
                   (etsy::marshall-type string tag) "/children")
      etsy::cgi-args)
     "tag" 'demarshall-tag)))



(defun get-top-categories (&key)
  "Get the list of current top level categories."
  (let ((etsy::cgi-args (list (cons "api_key" etsy::*api-key*))))
    (etsy::demarshall-results
     (etsy::api-call (concatenate 'string etsy::*base-url* "/categories")
                     etsy::cgi-args)
     "category" 'demarshall-category)))



(defun get-child-categories (category &key)
  "Get the child categories of a category."
  (etsy::parameter-type-check string category)
  (let ((etsy::cgi-args (list (cons "api_key" etsy::*api-key*))))
    (etsy::demarshall-results
     (etsy::api-call
      (concatenate 'string etsy::*base-url* "/categories/"
                   (etsy::marshall-type string category) "/children")
      etsy::cgi-args)
     "category" 'demarshall-category)))



(defun get-gift-guides (&key)
  "Get a list of gift guides."
  (let ((etsy::cgi-args (list (cons "api_key" etsy::*api-key*))))
    (etsy::demarshall-results
     (etsy::api-call (concatenate 'string etsy::*base-url* "/gift-guides")
                     etsy::cgi-args)
     "gift-guide" 'demarshall-gift-guide)))



(defun get-feedback (feedback-id &key)
  "Get a feedback record."
  (etsy::parameter-type-check int feedback-id)
  (let ((etsy::cgi-args (list (cons "api_key" etsy::*api-key*))))
    (etsy::demarshall-results
     (etsy::api-call
      (concatenate 'string etsy::*base-url* "/feedback/"
                   (etsy::marshall-type int feedback-id))
      etsy::cgi-args)
     "feedback" 'demarshall-feedback)))



(defun get-feedback-for-user (user-id &key offset limit)
  "Get a list of all feedback for a particular user."
  (etsy::parameter-type-check user-id-or-name user-id)
  (let ((etsy::cgi-args (list (cons "api_key" etsy::*api-key*))))
    (when offset
      (etsy::parameter-type-check int offset)
      (push (cons "offset" (etsy::marshall-type int offset)) etsy::cgi-args))
    (when limit
      (etsy::parameter-type-check int limit)
      (push (cons "limit" (etsy::marshall-type int limit)) etsy::cgi-args))
    (etsy::demarshall-results
     (etsy::api-call
      (concatenate 'string etsy::*base-url* "/users/"
                   (etsy::marshall-type user-id-or-name user-id) "/feedback")
      etsy::cgi-args)
     "feedback" 'demarshall-feedback)))



(defun get-feedback-as-buyer (user-id &key offset limit)
  "Get a list of all feedback where the user was a buyer in the transaction."
  (etsy::parameter-type-check user-id-or-name user-id)
  (let ((etsy::cgi-args (list (cons "api_key" etsy::*api-key*))))
    (when offset
      (etsy::parameter-type-check int offset)
      (push (cons "offset" (etsy::marshall-type int offset)) etsy::cgi-args))
    (when limit
      (etsy::parameter-type-check int limit)
      (push (cons "limit" (etsy::marshall-type int limit)) etsy::cgi-args))
    (etsy::demarshall-results
     (etsy::api-call
      (concatenate 'string etsy::*base-url* "/users/"
                   (etsy::marshall-type user-id-or-name user-id)
                   "/feedback/buyer")
      etsy::cgi-args)
     "feedback" 'demarshall-feedback)))



(defun get-feedback-as-seller (user-id &key offset limit)
  "Get a list of all feedback where the user was a seller in the transaction."
  (etsy::parameter-type-check user-id-or-name user-id)
  (let ((etsy::cgi-args (list (cons "api_key" etsy::*api-key*))))
    (when offset
      (etsy::parameter-type-check int offset)
      (push (cons "offset" (etsy::marshall-type int offset)) etsy::cgi-args))
    (when limit
      (etsy::parameter-type-check int limit)
      (push (cons "limit" (etsy::marshall-type int limit)) etsy::cgi-args))
    (etsy::demarshall-results
     (etsy::api-call
      (concatenate 'string etsy::*base-url* "/users/"
                   (etsy::marshall-type user-id-or-name user-id)
                   "/feedback/seller")
      etsy::cgi-args)
     "feedback" 'demarshall-feedback)))



(defun get-feedback-for-others (user-id &key offset limit)
  "Get a list of all feedback that the user left feedback for someone else."
  (etsy::parameter-type-check user-id-or-name user-id)
  (let ((etsy::cgi-args (list (cons "api_key" etsy::*api-key*))))
    (when offset
      (etsy::parameter-type-check int offset)
      (push (cons "offset" (etsy::marshall-type int offset)) etsy::cgi-args))
    (when limit
      (etsy::parameter-type-check int limit)
      (push (cons "limit" (etsy::marshall-type int limit)) etsy::cgi-args))
    (etsy::demarshall-results
     (etsy::api-call
      (concatenate 'string etsy::*base-url* "/users/"
                   (etsy::marshall-type user-id-or-name user-id)
                   "/feedback/others")
      etsy::cgi-args)
     "feedback" 'demarshall-feedback)))



(defun get-method-table (&key)
  "Get a list of all methods available."
  (let ((etsy::cgi-args (list (cons "api_key" etsy::*api-key*))))
    (etsy::demarshall-results
     (etsy::api-call (concatenate 'string etsy::*base-url* "/") etsy::cgi-args)
     "method" 'demarshall-method)))



(defun get-server-epoch (&key)
  "Get server time, in epoch seconds notation."
  (let ((etsy::cgi-args (list (cons "api_key" etsy::*api-key*))))
    (etsy::demarshall-results
     (etsy::api-call (concatenate 'string etsy::*base-url* "/server/epoch")
                     etsy::cgi-args)
     "int" 'demarshall-int)))



(defun ping (&key)
  "Check that the server is alive."
  (let ((etsy::cgi-args (list (cons "api_key" etsy::*api-key*))))
    (etsy::demarshall-results
     (etsy::api-call (concatenate 'string etsy::*base-url* "/server/ping")
                     etsy::cgi-args)
     "string" 'demarshall-string)))