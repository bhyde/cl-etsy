;; -*- mode: lisp; syntax: common-lisp; -*-
;;; Generated by build-methods in base.lisp (so don't edit)
(in-package "ETSY")

(defun get-user-details (user-id &key detail-level)
  "Get the details of a user."
  (parameter-type-check user-id-or-name user-id)
  (demarshall-results
   (with-api-call ("/users/" (marshall-type user-id-or-name user-id))
                  (detail-level detail-level))
   "user" 'demarshall-user))

(defun get-favorers-of-shop (user-id &key detail-level limit offset)
  "Get all the users who call this shop a favorite."
  (parameter-type-check user-id-or-name user-id)
  (demarshall-results
   (with-api-call
    ("/shops/" (marshall-type user-id-or-name user-id) "/favorers")
    (detail-level detail-level) (limit int) (offset int))
   "user" 'demarshall-user))

(defun get-favorers-of-listing (listing-id &key detail-level limit offset)
  "Get all the users who call this listing a favorite."
  (parameter-type-check int listing-id)
  (demarshall-results
   (with-api-call ("/listings/" (marshall-type int listing-id) "/favorers")
                  (detail-level detail-level) (limit int) (offset int))
   "user" 'demarshall-user))

(defun get-users-by-name (search-name &key detail-level limit offset)
  "Search active users alphabetically by user_name."
  (parameter-type-check string search-name)
  (demarshall-results
   (with-api-call ("/users/keywords/" (marshall-type string search-name))
                  (detail-level detail-level) (limit int) (offset int))
   "user" 'demarshall-user))

(defun get-shop-details (user-id &key detail-level)
  "Get the details of a seller's shop."
  (parameter-type-check user-id-or-name user-id)
  (demarshall-results
   (with-api-call ("/shops/" (marshall-type user-id-or-name user-id))
                  (detail-level detail-level))
   "shop" 'demarshall-shop))

(defun get-featured-sellers (&key offset limit detail-level)
  "Get a list of all the featured sellers."
  (demarshall-results
   (with-api-call ("/shops/featured") (offset int) (limit int)
                  (detail-level detail-level))
   "shop" 'demarshall-shop))

(defun get-shops-by-name
       (search-name &key detail-level limit offset sort-order)
  "Search all active shops sorted alphabetically by user_name."
  (parameter-type-check string search-name)
  (demarshall-results
   (with-api-call ("/shops/keywords/" (marshall-type string search-name))
                  (detail-level detail-level) (limit int) (offset int)
                  (sort-order sort-order))
   "shop" 'demarshall-shop))

(defun get-favorite-shops-of-user (user-id &key detail-level limit offset)
  "Get the favorite shops of a user."
  (parameter-type-check user-id-or-name user-id)
  (demarshall-results
   (with-api-call
    ("/users/" (marshall-type user-id-or-name user-id) "/favorites/shops")
    (detail-level detail-level) (limit int) (offset int))
   "shop" 'demarshall-shop))

(defun get-listing-details (listing-id &key detail-level)
  "Get the details of a listing."
  (parameter-type-check int listing-id)
  (demarshall-results
   (with-api-call ("/listings/" (marshall-type int listing-id))
                  (detail-level detail-level))
   "listing" 'demarshall-listing))

(defun get-all-listings (&key sort-on sort-order offset limit detail-level)
  "Get all active listings on Etsy."
  (demarshall-results
   (with-api-call ("/listings/all") (sort-on sort-on-a) (sort-order sort-order)
                  (offset int) (limit int) (detail-level detail-level))
   "listing" 'demarshall-listing))

(defun get-shop-listings
       (user-id &key detail-level limit offset section-id sort-order sort-on)
  "Get all the listings in a shop."
  (parameter-type-check user-id-or-name user-id)
  (demarshall-results
   (with-api-call
    ("/shops/" (marshall-type user-id-or-name user-id) "/listings")
    (detail-level detail-level) (limit int) (offset int) (section-id int)
    (sort-order sort-order) (sort-on sort-on-b))
   "listing" 'demarshall-listing))

(defun get-featured-details (user-id &key detail-level)
  "Get the expanded details on featured listings of a shop, ordered by highest ranked featured item."
  (parameter-type-check user-id-or-name user-id)
  (demarshall-results
   (with-api-call
    ("/shops/" (marshall-type user-id-or-name user-id) "/listings/featured")
    (detail-level detail-level))
   "listing" 'demarshall-listing))

(defun get-front-featured-listings (&key offset limit detail-level)
  "Get the featured listings on the front page for the current day."
  (demarshall-results
   (with-api-call ("/listings/featured/front") (offset int) (limit int)
                  (detail-level detail-level))
   "listing" 'demarshall-listing))

(defun get-favorite-listings-of-user (user-id &key detail-level limit offset)
  "Get the favorite listings of a user."
  (parameter-type-check user-id-or-name user-id)
  (demarshall-results
   (with-api-call
    ("/users/" (marshall-type user-id-or-name user-id) "/favorites/listings")
    (detail-level detail-level) (limit int) (offset int))
   "listing" 'demarshall-listing))

(defun get-gift-guide-listings (guide-id &key detail-level limit offset)
  "Get the listings in a gift guide."
  (parameter-type-check int guide-id)
  (demarshall-results
   (with-api-call ("/gift-guides/" (marshall-type int guide-id) "/listings")
                  (detail-level detail-level) (limit int) (offset int))
   "listing" 'demarshall-listing))

(defun get-listings-by-keyword
       (search-terms
        &key detail-level offset limit search-description max-price min-price
        sort-order sort-on)
  "Search for listings by keyword."
  (parameter-type-check array-of-strings search-terms)
  (demarshall-results
   (with-api-call
    ("/listings/keywords/" (marshall-type array-of-strings search-terms))
    (detail-level detail-level) (offset int) (limit int)
    (search-description boolean) (max-price float) (min-price float)
    (sort-order sort-order) (sort-on sort-on-b))
   "listing" 'demarshall-listing))

(defun get-listings-by-tags
       (tags &key detail-level limit offset sort-order sort-on)
  "Search for listings by tags."
  (parameter-type-check array-of-strings tags)
  (demarshall-results
   (with-api-call ("/listings/tags/" (marshall-type array-of-strings tags))
                  (detail-level detail-level) (limit int) (offset int)
                  (sort-order sort-order) (sort-on sort-on-b))
   "listing" 'demarshall-listing))

(defun get-listings-by-materials
       (materials &key detail-level limit offset sort-order sort-on)
  "Search for listings by materials used."
  (parameter-type-check array-of-strings materials)
  (demarshall-results
   (with-api-call
    ("/listings/materials/" (marshall-type array-of-strings materials))
    (detail-level detail-level) (limit int) (offset int)
    (sort-order sort-order) (sort-on sort-on-b))
   "listing" 'demarshall-listing))

(defun get-listings-by-category
       (category &key detail-level limit offset sort-order sort-on)
  "Search for listings by category."
  (parameter-type-check string category)
  (demarshall-results
   (with-api-call ("/listings/category/" (marshall-type string category))
                  (detail-level detail-level) (limit int) (offset int)
                  (sort-order sort-order) (sort-on sort-on-b))
   "listing" 'demarshall-listing))

(defun get-listings-by-color (color &key detail-level limit offset wiggle)
  "Search for listings by average color of primary image."
  (parameter-type-check color-triplet color)
  (demarshall-results
   (with-api-call ("/listings/color/" (marshall-type color-triplet color))
                  (detail-level detail-level) (limit int) (offset int)
                  (wiggle int))
   "listing" 'demarshall-listing))

(defun get-listings-by-color-and-keywords
       (search-terms color &key detail-level limit offset wiggle)
  "Search for listings by keywords and average color of primary image."
  (parameter-type-check array-of-strings search-terms)
  (parameter-type-check color-triplet color)
  (demarshall-results
   (with-api-call
    ("/listings/color/" (marshall-type color-triplet color) "/keywords/"
     (marshall-type array-of-strings search-terms))
    (detail-level detail-level) (limit int) (offset int) (wiggle int))
   "listing" 'demarshall-listing))

(defun get-top-tags ()
  "Get the list of current top level tags."
  (demarshall-results (with-api-call ("/tags")) "tag" 'demarshall-tag))

(defun get-child-tags (tag)
  "Get the child tags of a tag."
  (parameter-type-check string tag)
  (demarshall-results
   (with-api-call ("/tags/" (marshall-type string tag) "/children")) "tag"
   'demarshall-tag))

(defun get-top-categories ()
  "Get the list of current top level categories."
  (demarshall-results (with-api-call ("/categories")) "category"
                      'demarshall-category))

(defun get-child-categories (category)
  "Get the child categories of a category."
  (parameter-type-check string category)
  (demarshall-results
   (with-api-call ("/categories/" (marshall-type string category) "/children"))
   "category" 'demarshall-category))

(defun get-gift-guides ()
  "Get a list of gift guides."
  (demarshall-results (with-api-call ("/gift-guides")) "gift-guide"
                      'demarshall-gift-guide))

(defun get-feedback (feedback-id)
  "Get a feedback record."
  (parameter-type-check int feedback-id)
  (demarshall-results
   (with-api-call ("/feedback/" (marshall-type int feedback-id))) "feedback"
   'demarshall-feedback))

(defun get-feedback-for-user (user-id &key offset limit)
  "Get a list of all feedback for a particular user."
  (parameter-type-check user-id-or-name user-id)
  (demarshall-results
   (with-api-call
    ("/users/" (marshall-type user-id-or-name user-id) "/feedback")
    (offset int) (limit int))
   "feedback" 'demarshall-feedback))

(defun get-feedback-as-buyer (user-id &key offset limit)
  "Get a list of all feedback where the user was a buyer in the transaction."
  (parameter-type-check user-id-or-name user-id)
  (demarshall-results
   (with-api-call
    ("/users/" (marshall-type user-id-or-name user-id) "/feedback/buyer")
    (offset int) (limit int))
   "feedback" 'demarshall-feedback))

(defun get-feedback-as-seller (user-id &key offset limit)
  "Get a list of all feedback where the user was a seller in the transaction."
  (parameter-type-check user-id-or-name user-id)
  (demarshall-results
   (with-api-call
    ("/users/" (marshall-type user-id-or-name user-id) "/feedback/seller")
    (offset int) (limit int))
   "feedback" 'demarshall-feedback))

(defun get-feedback-for-others (user-id &key offset limit)
  "Get a list of all feedback that the user left feedback for someone else."
  (parameter-type-check user-id-or-name user-id)
  (demarshall-results
   (with-api-call
    ("/users/" (marshall-type user-id-or-name user-id) "/feedback/others")
    (offset int) (limit int))
   "feedback" 'demarshall-feedback))

(defun get-method-table ()
  "Get a list of all methods available."
  (demarshall-results (with-api-call ("/")) "method" 'demarshall-method))

(defun get-server-epoch ()
  "Get server time, in epoch seconds notation."
  (demarshall-results (with-api-call ("/server/epoch")) "int" 'demarshall-int))

(defun ping ()
  "Check that the server is alive."
  (demarshall-results (with-api-call ("/server/ping")) "string"
                      'demarshall-string))